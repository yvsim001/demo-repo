#include <avr/io.h>
#include <avr/pgmspace.h>
#include <util/delay.h>

#include "SSD1309.hpp"

namespace 
{
    constexpr uint8_t   COMMAND                     = 0x00;
    constexpr uint8_t   DATA                        = 0x40;
    constexpr uint8_t   SET_DISPLAY_OFF             = 0xAE;
    constexpr uint8_t   COMMAND_NO_OPERATION        = 0xE3;
    constexpr uint8_t   SET_MEMORY_ADDR_MODE        = 0x20;
    constexpr uint8_t   HORIZONTAL_ADDRESSING_MODE  = 0x00;
    constexpr uint8_t   SET_PAGE_START              = 0xB0;
    constexpr uint8_t   SET_COM_OUTPUT_REMAPPED     = 0xC8;
    constexpr uint8_t   SET_LOWER_COLUMN            = 0x00;
    constexpr uint8_t   SET_HIGHER_COLUMN           = 0x10;
    constexpr uint8_t   SET_DISPLAY_START_LINE      = 0x40;			
    constexpr uint8_t   ENTIRE_DISPLAY_ON           = 0xA4;
    constexpr uint8_t   SET_SEGMENT_REMAP_O2        = 0xA1;
    constexpr uint8_t   SET_DISPLAY_NORMAL          = 0xA6;
    constexpr uint8_t   SET_CONTRAST_CONTROL        = 0x81; 	
    constexpr uint8_t   SET_MULTIPLEX_RATIO         = 0xA8; 
    constexpr uint8_t   SET_DISPLAY_OFFSET          = 0xD3; 	
    constexpr uint8_t   SET_DISPLAY_CLOCK           = 0xD5; 
    constexpr uint8_t   SET_PRECHARGE_PERIOD        = 0xD9; 	
    constexpr uint8_t   SET_COM_PINS                = 0xDA; 	
    constexpr uint8_t   SET_VCOMH_DESELECT          = 0xDB;	
    constexpr uint8_t   CHARGE_BUMB_SETTING         = 0x8D; 
    constexpr uint8_t   SET_DISPLAY_ON              = 0xAF;
    constexpr uint8_t   SET_COLUMN_ADDRESS          = 0x21;
}

static const unsigned char arrow_up[] PROGMEM = {
	0x01,0x03,0x07,0x0F,0x1F,0x3F,0x7F,0xFF,0xFF,0x7F,0x3F,0x1F,0x0F,0x07,0x03,0x01,
};
static const unsigned char arrow_down[] PROGMEM = {
	0x80,0xC0,0xE0,0xF0,0xF8,0xFC,0xFE,0xFF,0xFF,0xFE,0xFC,0xF8,0xF0,0xE0,0xC0,0x80,
};

static const unsigned char font[256][8] PROGMEM  ={
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	// 0x00
	{0x7E,0x81,0x95,0xB1,0xB1,0x95,0x81,0x7E},	// 0x01
	{0x7E,0xFF,0xEB,0xCF,0xCF,0xEB,0xFF,0x7E},	// 0x02
	{0x0E,0x1F,0x3F,0x7E,0x3F,0x1F,0x0E,0x00},	// 0x03
	{0x08,0x1C,0x3E,0x7F,0x3E,0x1C,0x08,0x00},	// 0x04
	{0x38,0x3A,0x9F,0xFF,0x9F,0x3A,0x38,0x00},	// 0x05
	{0x10,0x38,0xBC,0xFF,0xBC,0x38,0x10,0x00},	// 0x06
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	// 0x07
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	// 0x08
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	// 0x09
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	// 0x0A
	{0x70,0xF8,0x88,0x88,0xFD,0x7F,0x07,0x0F},	// 0x0B
	{0x00,0x4E,0x5F,0xF1,0xF1,0x5F,0x4E,0x00},	// 0x0C
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	// 0x0D
	{0xC0,0xFF,0x7F,0x05,0x05,0x65,0x7F,0x3F},	// 0x0E
	{0x99,0x5A,0x3C,0xE7,0xE7,0x3C,0x5A,0x99},	// 0x0F
	{0x7F,0x3E,0x3E,0x1C,0x1C,0x08,0x08,0x00},	// 0x10
	{0x08,0x08,0x1C,0x1C,0x3E,0x3E,0x7F,0x00},	// 0x11
	{0x00,0x24,0x66,0xFF,0xFF,0x66,0x24,0x00},	// 0x12
	{0x00,0x5F,0x5F,0x00,0x00,0x5F,0x5F,0x00},	// 0x13
	{0x06,0x0F,0x09,0x7F,0x7F,0x01,0x7F,0x7F},	// 0x14
	{0xDA,0xBF,0xA5,0xA5,0xFD,0x59,0x03,0x02},	// 0x15
	{0x00,0x70,0x70,0x70,0x70,0x70,0x70,0x00},	// 0x16
	{0x80,0x94,0xB6,0xFF,0xFF,0xB6,0x94,0x80},	// 0x17
	{0x00,0x04,0x06,0x7F,0x7F,0x06,0x04,0x00},	// 0x18
	{0x00,0x10,0x30,0x7F,0x7F,0x30,0x10,0x00},	// 0x19
	{0x08,0x08,0x08,0x2A,0x3E,0x1C,0x08,0x00},	// 0x1A
	{0x08,0x1C,0x3E,0x2A,0x08,0x08,0x08,0x00},	// 0x1B
	{0x3C,0x3C,0x20,0x20,0x20,0x20,0x20,0x00},	// 0x1C
	{0x08,0x1C,0x3E,0x08,0x08,0x3E,0x1C,0x08},	// 0x1D
	{0x30,0x38,0x3C,0x3E,0x3E,0x3C,0x38,0x30},	// 0x1E
	{0x06,0x0E,0x1E,0x3E,0x3E,0x1E,0x0E,0x06},	// 0x1F
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	// 0x20
	{0x00,0x06,0x5F,0x5F,0x06,0x00,0x00,0x00},	// 0x21
	{0x00,0x07,0x07,0x00,0x07,0x07,0x00,0x00},	// 0x22
	{0x14,0x7F,0x7F,0x14,0x7F,0x7F,0x14,0x00},	// 0x23
	{0x24,0x2E,0x6B,0x6B,0x3A,0x12,0x00,0x00},	// 0x24
	{0x46,0x66,0x30,0x18,0x0C,0x66,0x62,0x00},	// 0x25
	{0x30,0x7A,0x4F,0x5D,0x37,0x7A,0x48,0x00},	// 0x26
	{0x04,0x07,0x03,0x00,0x00,0x00,0x00,0x00},	// 0x27
	{0x00,0x1C,0x3E,0x63,0x41,0x00,0x00,0x00},	// 0x28
	{0x00,0x41,0x63,0x3E,0x1C,0x00,0x00,0x00},	// 0x29
	{0x08,0x2A,0x3E,0x1C,0x1C,0x3E,0x2A,0x08},	// 0x2A
	{0x08,0x08,0x3E,0x3E,0x08,0x08,0x00,0x00},	// 0x2B
	{0x00,0xA0,0xE0,0x60,0x00,0x00,0x00,0x00},	// 0x2C
	{0x08,0x08,0x08,0x08,0x08,0x08,0x00,0x00},	// 0x2D
	{0x00,0x00,0x60,0x60,0x00,0x00,0x00,0x00},	// 0x2E
	{0x60,0x30,0x18,0x0C,0x06,0x03,0x01,0x00},	// 0x2F
	{0x3E,0x7F,0x59,0x4D,0x7F,0x3E,0x00,0x00},	// 0x30
	{0x42,0x42,0x7F,0x7F,0x40,0x40,0x00,0x00},	// 0x31
	{0x62,0x73,0x59,0x49,0x6F,0x66,0x00,0x00},	// 0x32
	{0x22,0x63,0x49,0x49,0x7F,0x36,0x00,0x00},	// 0x33
	{0x18,0x1C,0x16,0x13,0x7F,0x7F,0x10,0x00},	// 0x34
	{0x27,0x67,0x45,0x45,0x7D,0x39,0x00,0x00},	// 0x35
	{0x3C,0x7E,0x4B,0x49,0x79,0x30,0x00,0x00},	// 0x36
	{0x03,0x63,0x71,0x19,0x0F,0x07,0x00,0x00},	// 0x37
	{0x36,0x7F,0x49,0x49,0x7F,0x36,0x00,0x00},	// 0x38
	{0x06,0x4F,0x49,0x69,0x3F,0x1E,0x00,0x00},	// 0x39
	{0x00,0x00,0x6C,0x6C,0x00,0x00,0x00,0x00},	// 0x3A
	{0x00,0xA0,0xEC,0x6C,0x00,0x00,0x00,0x00},	// 0x3B
	{0x08,0x1C,0x36,0x63,0x41,0x00,0x00,0x00},	// 0x3C
	{0x14,0x14,0x14,0x14,0x14,0x14,0x00,0x00},	// 0x3D
	{0x00,0x41,0x63,0x36,0x1C,0x08,0x00,0x00},	// 0x3E
	{0x02,0x03,0x51,0x59,0x0F,0x06,0x00,0x00},	// 0x3F
	{0x3E,0x7F,0x41,0x5D,0x5D,0x1F,0x1E,0x00},	// 0x40
	{0x7C,0x7E,0x13,0x13,0x7E,0x7C,0x00,0x00},	// 0x41
	{0x41,0x7F,0x7F,0x49,0x49,0x7F,0x36,0x00},	// 0x42
	{0x1C,0x3E,0x63,0x41,0x41,0x63,0x22,0x00},	// 0x43
	{0x41,0x7F,0x7F,0x41,0x63,0x7F,0x1C,0x00},	// 0x44
	{0x41,0x7F,0x7F,0x49,0x5D,0x41,0x63,0x00},	// 0x45
	{0x41,0x7F,0x7F,0x49,0x1D,0x01,0x03,0x00},	// 0x46
	{0x1C,0x3E,0x63,0x41,0x51,0x73,0x72,0x00},	// 0x47
	{0x7F,0x7F,0x08,0x08,0x7F,0x7F,0x00,0x00},	// 0x48
	{0x00,0x41,0x7F,0x7F,0x41,0x00,0x00,0x00},	// 0x49
	{0x30,0x70,0x40,0x41,0x7F,0x3F,0x01,0x00},	// 0x4A
	{0x41,0x7F,0x7F,0x08,0x1C,0x77,0x63,0x00},	// 0x4B
	{0x41,0x7F,0x7F,0x41,0x40,0x60,0x70,0x00},	// 0x4C
	{0x7F,0x7F,0x06,0x0C,0x06,0x7F,0x7F,0x00},	// 0x4D
	{0x7F,0x7F,0x06,0x0C,0x18,0x7F,0x7F,0x00},	// 0x4E
	{0x1C,0x3E,0x63,0x41,0x63,0x3E,0x1C,0x00},	// 0x4F
	{0x41,0x7F,0x7F,0x49,0x09,0x0F,0x06,0x00},	// 0x50
	{0x1E,0x3F,0x21,0x71,0x7F,0x5E,0x00,0x00},	// 0x51
	{0x41,0x7F,0x7F,0x19,0x39,0x6F,0x46,0x00},	// 0x52
	{0x26,0x67,0x4D,0x59,0x7B,0x32,0x00,0x00},	// 0x53
	{0x03,0x41,0x7F,0x7F,0x41,0x03,0x00,0x00},	// 0x54
	{0x7F,0x7F,0x40,0x40,0x7F,0x7F,0x00,0x00},	// 0x55
	{0x1F,0x3F,0x60,0x60,0x3F,0x1F,0x00,0x00},	// 0x56
	{0x7F,0x7F,0x30,0x18,0x30,0x7F,0x7F,0x00},	// 0x57
	{0x63,0x77,0x1C,0x08,0x1C,0x77,0x63,0x00},	// 0x58
	{0x07,0x4F,0x78,0x78,0x4F,0x07,0x00,0x00},	// 0x59
	{0x67,0x73,0x59,0x4D,0x47,0x63,0x71,0x00},	// 0x5A
	{0x00,0x7F,0x7F,0x41,0x41,0x00,0x00,0x00},	// 0x5B
	{0x01,0x03,0x06,0x0C,0x18,0x30,0x60,0x00},	// 0x5C
	{0x00,0x41,0x41,0x7F,0x7F,0x00,0x00,0x00},	// 0x5D
	{0x08,0x0C,0x06,0x03,0x06,0x0C,0x08,0x00},	// 0x5E
	{0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80},	// 0x5F
	{0x00,0x00,0x03,0x07,0x04,0x00,0x00,0x00},	// 0x60
	{0x20,0x74,0x54,0x54,0x3C,0x78,0x40,0x00},	// 0x61
	{0x41,0x3F,0x7F,0x44,0x44,0x7C,0x38,0x00},	// 0x62
	{0x38,0x7C,0x44,0x44,0x6C,0x28,0x00,0x00},	// 0x63
	{0x30,0x78,0x48,0x49,0x3F,0x7F,0x40,0x00},	// 0x64
	{0x38,0x7C,0x54,0x54,0x5C,0x18,0x00,0x00},	// 0x65
	{0x48,0x7E,0x7F,0x49,0x03,0x02,0x00,0x00},	// 0x66
	{0x98,0xBC,0xA4,0xA4,0xF8,0x7C,0x04,0x00},	// 0x67
	{0x41,0x7F,0x7F,0x08,0x04,0x7C,0x78,0x00},	// 0x68
	{0x00,0x44,0x7D,0x7D,0x40,0x00,0x00,0x00},	// 0x69
	{0x40,0xC4,0x84,0xFD,0x7D,0x00,0x00,0x00},	// 0x6A
	{0x41,0x7F,0x7F,0x10,0x38,0x6C,0x44,0x00},	// 0x6B
	{0x00,0x41,0x7F,0x7F,0x40,0x00,0x00,0x00},	// 0x6C
	{0x7C,0x7C,0x0C,0x18,0x0C,0x7C,0x78,0x00},	// 0x6D
	{0x7C,0x7C,0x04,0x04,0x7C,0x78,0x00,0x00},	// 0x6E
	{0x38,0x7C,0x44,0x44,0x7C,0x38,0x00,0x00},	// 0x6F
	{0x84,0xFC,0xF8,0xA4,0x24,0x3C,0x18,0x00},	// 0x70
	{0x18,0x3C,0x24,0xA4,0xF8,0xFC,0x84,0x00},	// 0x71
	{0x44,0x7C,0x78,0x44,0x1C,0x18,0x00,0x00},	// 0x72
	{0x48,0x5C,0x54,0x54,0x74,0x24,0x00,0x00},	// 0x73
	{0x00,0x04,0x3E,0x7F,0x44,0x24,0x00,0x00},	// 0x74
	{0x3C,0x7C,0x40,0x40,0x3C,0x7C,0x40,0x00},	// 0x75
	{0x1C,0x3C,0x60,0x60,0x3C,0x1C,0x00,0x00},	// 0x76
	{0x3C,0x7C,0x60,0x30,0x60,0x7C,0x3C,0x00},	// 0x77
	{0x44,0x6C,0x38,0x10,0x38,0x6C,0x44,0x00},	// 0x78
	{0x9C,0xBC,0xA0,0xA0,0xFC,0x7C,0x00,0x00},	// 0x79
	{0x4C,0x64,0x74,0x5C,0x4C,0x64,0x00,0x00},	// 0x7A
	{0x08,0x08,0x3E,0x77,0x41,0x41,0x00,0x00},	// 0x7B
	{0x00,0x00,0x00,0x77,0x77,0x00,0x00,0x00},	// 0x7C
	{0x41,0x41,0x77,0x3E,0x08,0x08,0x00,0x00},	// 0x7D
	{0x02,0x03,0x01,0x03,0x02,0x03,0x01,0x00},	// 0x7E
	{0x78,0x7C,0x46,0x43,0x46,0x7C,0x78,0x00},	// 0x7F
	{0x1E,0xBF,0xE1,0x61,0x33,0x12,0x00,0x00},	// 0x80
	{0x3A,0x7A,0x40,0x40,0x7A,0x7A,0x40,0x00},	// 0x81
	{0x38,0x7C,0x56,0x57,0x5D,0x18,0x00,0x00},	// 0x82
	{0x02,0x23,0x75,0x55,0x55,0x7D,0x7B,0x42},	// 0x83
	{0x21,0x75,0x54,0x54,0x7D,0x79,0x40,0x00},	// 0x84
	{0x20,0x75,0x57,0x56,0x7C,0x78,0x40,0x00},	// 0x85
	{0x00,0x22,0x77,0x55,0x55,0x7F,0x7A,0x40},	// 0x86
	{0x1C,0xBE,0xE2,0x62,0x36,0x14,0x00,0x00},	// 0x87
	{0x02,0x3B,0x7D,0x55,0x55,0x5D,0x1B,0x02},	// 0x88
	{0x39,0x7D,0x54,0x54,0x5D,0x19,0x00,0x00},	// 0x89
	{0x38,0x7D,0x57,0x56,0x5C,0x18,0x00,0x00},	// 0x8A
	{0x01,0x45,0x7C,0x7C,0x41,0x01,0x00,0x00},	// 0x8B
	{0x02,0x03,0x45,0x7D,0x7D,0x43,0x02,0x00},	// 0x8C
	{0x00,0x45,0x7F,0x7E,0x40,0x00,0x00,0x00},	// 0x8D
	{0x79,0x7D,0x26,0x26,0x7D,0x79,0x00,0x00},	// 0x8E
	{0x70,0x7A,0x2D,0x2D,0x7A,0x70,0x00,0x00},	// 0x8F
	{0x44,0x7C,0x7E,0x57,0x55,0x44,0x00,0x00},	// 0x90
	{0x20,0x74,0x54,0x54,0x7C,0x7C,0x54,0x54},	// 0x91
	{0x7C,0x7E,0x0B,0x09,0x7F,0x7F,0x49,0x00},	// 0x92
	{0x32,0x7B,0x49,0x49,0x7B,0x32,0x00,0x00},	// 0x93
	{0x32,0x7A,0x48,0x48,0x7A,0x32,0x00,0x00},	// 0x94
	{0x30,0x79,0x4B,0x4A,0x78,0x30,0x00,0x00},	// 0x95
	{0x3A,0x7B,0x41,0x41,0x7B,0x7A,0x40,0x00},	// 0x96
	{0x38,0x79,0x43,0x42,0x78,0x78,0x40,0x00},	// 0x97
	{0xBA,0xBA,0xA0,0xA0,0xFA,0x7A,0x00,0x00},	// 0x98
	{0x39,0x7D,0x44,0x44,0x44,0x7D,0x39,0x00},	// 0x99
	{0x3D,0x7D,0x40,0x40,0x7D,0x3D,0x00,0x00},	// 0x9A
	{0x38,0x7C,0x64,0x54,0x4C,0x7C,0x38,0x00},	// 0x9B
	{0x68,0x7E,0x7F,0x49,0x43,0x66,0x20,0x00},	// 0x9C
	{0x5C,0x3E,0x73,0x49,0x67,0x3E,0x1D,0x00},	// 0x9D
	{0x44,0x6C,0x38,0x38,0x6C,0x44,0x00,0x00},	// 0x9E
	{0x40,0xC8,0x88,0xFE,0x7F,0x09,0x0B,0x02},	// 0x9F
	{0x20,0x74,0x56,0x57,0x7D,0x78,0x40,0x00},	// 0xA0
	{0x00,0x44,0x7E,0x7F,0x41,0x00,0x00,0x00},	// 0xA1
	{0x30,0x78,0x48,0x4A,0x7B,0x31,0x00,0x00},	// 0xA2
	{0x38,0x78,0x40,0x42,0x7B,0x79,0x40,0x00},	// 0xA3
	{0x7A,0x7B,0x09,0x0B,0x7A,0x73,0x01,0x00},	// 0xA4
	{0x7A,0x7B,0x19,0x33,0x7A,0x7B,0x01,0x00},	// 0xA5
	{0x00,0x26,0x2F,0x29,0x2F,0x2F,0x28,0x00},	// 0xA6
	{0x00,0x26,0x2F,0x29,0x29,0x2F,0x26,0x00},	// 0xA7
	{0x30,0x78,0x4D,0x45,0x60,0x20,0x00,0x00},	// 0xA8
	{0x1C,0x22,0x7D,0x4B,0x5B,0x65,0x22,0x1C},	// 0xA9
	{0x08,0x08,0x08,0x08,0x38,0x38,0x00,0x00},	// 0xAA
	{0x61,0x3F,0x1F,0xCC,0xEE,0xAB,0xB9,0x90},	// 0xAB
	{0x61,0x3F,0x1F,0x4C,0x66,0x73,0xD9,0xF8},	// 0xAC
	{0x00,0x00,0x60,0xFA,0xFA,0x60,0x00,0x00},	// 0xAD
	{0x08,0x1C,0x36,0x22,0x08,0x1C,0x36,0x22},	// 0xAE
	{0x22,0x36,0x1C,0x08,0x22,0x36,0x1C,0x08},	// 0xAF
	{0xAA,0x00,0x55,0x00,0xAA,0x00,0x55,0x00},	// 0xB0
	{0xAA,0x55,0xAA,0x55,0xAA,0x55,0xAA,0x55},	// 0xB1
	{0x55,0xFF,0xAA,0xFF,0x55,0xFF,0xAA,0xFF},	// 0xB2
	{0x00,0x00,0x00,0xFF,0xFF,0x00,0x00,0x00},	// 0xB3
	{0x10,0x10,0x10,0xFF,0xFF,0x00,0x00,0x00},	// 0xB4
	{0x70,0x78,0x2C,0x2E,0x7B,0x71,0x00,0x00},	// 0xB5
	{0x72,0x79,0x2D,0x2D,0x79,0x72,0x00,0x00},	// 0xB6
	{0x71,0x7B,0x2E,0x2C,0x78,0x70,0x00,0x00},	// 0xB7
	{0x1C,0x22,0x5D,0x55,0x55,0x41,0x22,0x1C},	// 0xB8
	{0x14,0x14,0xF7,0xF7,0x00,0xFF,0xFF,0x00},	// 0xB9
	{0x00,0x00,0xFF,0xFF,0x00,0xFF,0xFF,0x00},	// 0xBA
	{0x14,0x14,0xF4,0xF4,0x04,0xFC,0xFC,0x00},	// 0xBB
	{0x14,0x14,0x17,0x17,0x10,0x1F,0x1F,0x00},	// 0xBC
	{0x18,0x3C,0x24,0xE7,0xE7,0x24,0x24,0x00},	// 0xBD
	{0x2B,0x2F,0xFC,0xFC,0x2F,0x2B,0x00,0x00},	// 0xBE
	{0x10,0x10,0x10,0xF0,0xF0,0x00,0x00,0x00},	// 0xBF
	{0x00,0x00,0x00,0x1F,0x1F,0x10,0x10,0x10},	// 0xC0
	{0x10,0x10,0x10,0x1F,0x1F,0x10,0x10,0x10},	// 0xC1
	{0x10,0x10,0x10,0xF0,0xF0,0x10,0x10,0x10},	// 0xC2
	{0x00,0x00,0x00,0xFF,0xFF,0x10,0x10,0x10},	// 0xC3
	{0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10},	// 0xC4
	{0x10,0x10,0x10,0xFF,0xFF,0x10,0x10,0x10},	// 0xC5
	{0x22,0x77,0x55,0x57,0x7E,0x7B,0x41,0x00},	// 0xC6
	{0x72,0x7B,0x2D,0x2F,0x7A,0x73,0x01,0x00},	// 0xC7
	{0x00,0x00,0x1F,0x1F,0x10,0x17,0x17,0x14},	// 0xC8
	{0x00,0x00,0xFC,0xFC,0x04,0xF4,0xF4,0x14},	// 0xC9
	{0x14,0x14,0x17,0x17,0x10,0x17,0x17,0x14},	// 0xCA
	{0x14,0x14,0xF4,0xF4,0x04,0xF4,0xF4,0x14},	// 0xCB
	{0x00,0x00,0xFF,0xFF,0x00,0xF7,0xF7,0x14},	// 0xCC
	{0x14,0x14,0x14,0x14,0x14,0x14,0x14,0x14},	// 0xCD
	{0x14,0x14,0xF7,0xF7,0x00,0xF7,0xF7,0x14},	// 0xCE
	{0x66,0x3C,0x3C,0x24,0x3C,0x3C,0x66,0x00},	// 0xCF
	{0x05,0x27,0x72,0x57,0x7D,0x38,0x00,0x00},	// 0xD0
	{0x49,0x7F,0x7F,0x49,0x63,0x7F,0x1C,0x00},	// 0xD1
	{0x46,0x7D,0x7D,0x55,0x55,0x46,0x00,0x00},	// 0xD2
	{0x45,0x7D,0x7C,0x54,0x55,0x45,0x00,0x00},	// 0xD3
	{0x44,0x7D,0x7F,0x56,0x54,0x44,0x00,0x00},	// 0xD4
	{0x0A,0x0E,0x08,0x00,0x00,0x00,0x00,0x00},	// 0xD5
	{0x00,0x44,0x7E,0x7F,0x45,0x00,0x00,0x00},	// 0xD6
	{0x02,0x45,0x7D,0x7D,0x45,0x02,0x00,0x00},	// 0xD7
	{0x01,0x45,0x7C,0x7C,0x45,0x01,0x00,0x00},	// 0xD8
	{0x10,0x10,0x10,0x1F,0x1F,0x00,0x00,0x00},	// 0xD9
	{0x00,0x00,0x00,0xF0,0xF0,0x10,0x10,0x10},	// 0xDA
	{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF},	// 0xDB
	{0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0},	// 0xDC
	{0x00,0x00,0x00,0x77,0x77,0x00,0x00,0x00},	// 0xDD
	{0x00,0x45,0x7F,0x7E,0x44,0x00,0x00,0x00},	// 0xDE
	{0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F,0x0F},	// 0xDF
	{0x38,0x7C,0x46,0x47,0x45,0x7C,0x38,0x00},	// 0xE0
	{0xFC,0xFE,0x2A,0x2A,0x3E,0x14,0x00,0x00},	// 0xE1
	{0x3A,0x7D,0x45,0x45,0x45,0x7D,0x3A,0x00},	// 0xE2
	{0x38,0x7C,0x45,0x47,0x46,0x7C,0x38,0x00},	// 0xE3
	{0x32,0x7B,0x49,0x4B,0x7A,0x33,0x01,0x00},	// 0xE4
	{0x3A,0x7F,0x45,0x47,0x46,0x7F,0x39,0x00},	// 0xE5
	{0x80,0xFE,0x7E,0x20,0x20,0x3E,0x1E,0x00},	// 0xE6
	{0x42,0x7E,0x7E,0x54,0x1C,0x08,0x00,0x00},	// 0xE7
	{0x41,0x7F,0x7F,0x55,0x14,0x1C,0x08,0x00},	// 0xE8
	{0x3C,0x7C,0x42,0x43,0x7D,0x3C,0x00,0x00},	// 0xE9
	{0x3A,0x79,0x41,0x41,0x79,0x3A,0x00,0x00},	// 0xEA
	{0x3C,0x7D,0x43,0x42,0x7C,0x3C,0x00,0x00},	// 0xEB
	{0xB8,0xB8,0xA2,0xA3,0xF9,0x78,0x00,0x00},	// 0xEC
	{0x0C,0x5C,0x72,0x73,0x5D,0x0C,0x00,0x00},	// 0xED
	{0x02,0x02,0x02,0x02,0x02,0x02,0x00,0x00},	// 0xEE
	{0x00,0x00,0x02,0x03,0x01,0x00,0x00,0x00},	// 0xEF
	{0x10,0x10,0x10,0x10,0x10,0x10,0x00,0x00},	// 0xF0
	{0x44,0x44,0x5F,0x5F,0x44,0x44,0x00,0x00},	// 0xF1
	{0x28,0x28,0x28,0x28,0x28,0x28,0x00,0x00},	// 0xF2
	{0x71,0x35,0x1F,0x4C,0x66,0x73,0xD9,0xF8},	// 0xF3
	{0x06,0x0F,0x09,0x7F,0x7F,0x01,0x7F,0x7F},	// 0xF4
	{0xDA,0xBF,0xA5,0xA5,0xFD,0x59,0x03,0x02},	// 0xF5
	{0x08,0x08,0x6B,0x6B,0x08,0x08,0x00,0x00},	// 0xF6
	{0x00,0x80,0xC0,0x40,0x00,0x00,0x00,0x00},	// 0xF7
	{0x00,0x06,0x0F,0x09,0x0F,0x06,0x00,0x00},	// 0xF8
	{0x02,0x02,0x00,0x00,0x02,0x02,0x00,0x00},	// 0xF9
	{0x00,0x00,0x00,0x10,0x10,0x00,0x00,0x00},	// 0xFA
	{0x00,0x12,0x13,0x1F,0x1F,0x10,0x10,0x00},	// 0xFB
	{0x00,0x11,0x15,0x15,0x1F,0x1F,0x0A,0x00},	// 0xFC
	{0x00,0x19,0x1D,0x15,0x17,0x12,0x00,0x00},	// 0xFD
	{0x00,0x00,0x3C,0x3C,0x3C,0x3C,0x00,0x00},	// 0xFE
	{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00} 	// 0xFF
};

SSD1309::SSD1309(I2c &com,  OutputPort &reset, volatile uint8_t* port, uint8_t addr, uint8_t max) : Com(com), Reset(reset), port(port), addr(addr), max(max) {
    font_size = 0;

	Reset.setHigh();
}

bool SSD1309::init(){
    if(!Com.start(addr)) return false;
    if(!Com.sendByte(0x00)) return false;

    if(!Com.sendByte(SET_DISPLAY_OFF)) return false;
    if(!Com.sendByte(COMMAND_NO_OPERATION)) return false;
    if(!Com.sendByte(SET_MEMORY_ADDR_MODE)) return false;
    if(!Com.sendByte(HORIZONTAL_ADDRESSING_MODE)) return false;
    if(!Com.sendByte(SET_PAGE_START)) return false;
    if(!Com.sendByte(SET_COM_OUTPUT_REMAPPED)) return false;
    if(!Com.sendByte(SET_LOWER_COLUMN)) return false;
    if(!Com.sendByte(SET_HIGHER_COLUMN)) return false;
    if(!Com.sendByte(SET_DISPLAY_START_LINE)) return false;
    if(!Com.sendByte(ENTIRE_DISPLAY_ON)) return false;
    if(!Com.sendByte(SET_SEGMENT_REMAP_O2)) return false;
    if(!Com.sendByte(SET_DISPLAY_NORMAL)) return false;
    if(!Com.sendByte(SET_CONTRAST_CONTROL)) return false;
    if(!Com.sendByte(0xFF)) return false;
    if(!Com.sendByte(SET_MULTIPLEX_RATIO)) return false;
    if(!Com.sendByte(0x3F)) return false;
    if(!Com.sendByte(SET_DISPLAY_OFFSET)) return false;
    if(!Com.sendByte(0x00)) return false;
    if(!Com.sendByte(SET_DISPLAY_CLOCK)) return false;
    if(!Com.sendByte(0xF0)) return false;
    if(!Com.sendByte(SET_PRECHARGE_PERIOD)) return false;
    if(!Com.sendByte(0x22)) return false;
    if(!Com.sendByte(SET_COM_PINS)) return false;
    if(!Com.sendByte(0x12)) return false;
    if(!Com.sendByte(SET_VCOMH_DESELECT)) return false;
    if(!Com.sendByte(0x20)) return false;
    if(!Com.sendByte(CHARGE_BUMB_SETTING)) return false;
    if(!Com.sendByte(0x14)) return false;
    if(!Com.sendByte(SET_DISPLAY_ON)) return false;

    Com.stop();

	return true;
}
bool SSD1309::clrScreen(){
    gotoXY(0,0);
    if(!Com.start(addr)) return false;
    if(!Com.sendByte(DATA)) return false;

    for(uint16_t i = 0; i < 128<<4; i++){
        if(!Com.sendByte(0)) return false;
    }
    Com.stop();
    gotoXY(0,0);

	return true;
}
bool SSD1309::gotoRealXY(uint8_t x, uint8_t y){
    if(!Com.start(addr)) return false;
    if(!Com.sendByte(COMMAND)) return false;
    if(!Com.sendByte(SET_PAGE_START|y)) return false;
    if(!Com.sendByte(SET_COLUMN_ADDRESS)) return false;
    if(!Com.sendByte(x)) return false;
    if(!Com.sendByte(SET_DISPLAY_START_LINE|0x3F)) return false;

    Com.stop();

	return true;
}
bool SSD1309::gotoXY(uint8_t x, uint8_t y){
    pos_x = x;
    pos_y = y;
    if(!Com.start(addr)) return false;
    if(!Com.sendByte(COMMAND)) return false;
    if(!Com.sendByte(SET_PAGE_START|y)) return false;
    if(!Com.sendByte(SET_COLUMN_ADDRESS)) return false;
    if(!Com.sendByte(x*8)) return false;
    if(!Com.sendByte(SET_DISPLAY_START_LINE|0x3F)) return false;

    Com.stop();

	return true;
}
bool SSD1309::writeChar(char c){
    if(font_size != 0){
        uint8_t tmp = 0;
        gotoXY(pos_x, pos_y);
        if(!Com.start(addr)) return false;
        if(!Com.sendByte(DATA)) return false;

        for(uint8_t count = 0; count < 8; count++){
            tmp = pgm_read_byte(&font[(unsigned char)c][count]);
            tmp = tmp & 0x0F;
            tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
            if(!Com.sendByte(tmp)) return false;
            if(!Com.sendByte(tmp)) return false;
        }
        Com.stop();
        gotoXY(pos_x, pos_y + 1);

        if(!Com.start(addr)) return false;
        if(!Com.sendByte(DATA)) return false;

        for(uint8_t count = 0; count < 8; count++){
            tmp = pgm_read_byte(&font[(unsigned char)c][count]);
			tmp = (tmp & 0xf0)>>4;
			tmp = ((tmp&0x01)*3)+(((tmp&0x02)<<1)*3)+(((tmp&0x04)<<2)*3)+(((tmp&0x08)<<3)*3);
            if(!Com.sendByte(tmp)) return false;
            if(!Com.sendByte(tmp)) return false;
        }
        Com.stop();
        pos_x += 2;
        pos_y -= 1;
    }
    else {
        gotoXY(pos_x, pos_y);
        if(!Com.start(addr)) return false;
        if(!Com.sendByte(DATA)) return false;
        for (uint8_t count = 0; count < 8; count++){
            if(!Com.sendByte(pgm_read_byte(&font[(unsigned char)c][count]))) return false;
		}
        Com.stop();
        pos_x += 1;
    }

	return true;
}
bool SSD1309::writeString(const char* str){
 	while(*str){
        if(!writeChar(*str++)) return false;
    }

	return true;
}
void SSD1309::setFontSize(uint8_t size){
    font_size = size;
}

void SSD1309::drawArrowUp(){
	uint8_t byte = 0;

	gotoXY(pos_x, pos_y);

	for(uint8_t y = 0; y < 1; y++){
		for(uint8_t x = 0; x < 16; x++){
			gotoRealXY(x+(pos_x*8), y+(pos_y*8));
			Com.start(addr);
			Com.sendByte(DATA);
			Com.sendByte(pgm_read_byte(&arrow_down[byte]));
			Com.stop();
			byte++;
		}
	}
}
void SSD1309::drawArrowDown(){
	uint8_t byte = 0;

	gotoXY(pos_x, pos_y);

	for(uint8_t y = 0; y < 1; y++){
		for(uint8_t x = 0; x < 16; x++){
			gotoRealXY(x+(pos_x*8), y+(pos_y*8));
			Com.start(addr);
			Com.sendByte(DATA);
			Com.sendByte(pgm_read_byte(&arrow_up[byte]));
			Com.stop();
			byte++;
		}
	}
}



void SSD1309::restart(){
	Reset.setLow();
	_delay_ms(50);
	Reset.setHigh();
	_delay_ms(50);
	init();
	clrScreen();
}